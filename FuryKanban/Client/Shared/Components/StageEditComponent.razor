@using BlazorAnimate
@inject FuryKanban.Client.Core.StageService StateService


<EditForm model="@Stage" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	<div class="input-group">
		<input class="form-control" @bind="Stage.Title" id="name" type="text" placeholder="Column name">
		<span class="input-group-append">
			@if (!_isLoading)
			{
				<button class="btn btn-success" type="submit">Save</button>
			}
			else
			{
				<button class="btn btn-success" type="button" disabled="disabled">
					<i class="spinner-border spinner-border-sm"></i>
				</button>
			}
		</span>
	</div>
	<ValidationMessage For="@(() => Stage.Title)" />
</EditForm>


@code {
	[Parameter]
	public FuryKanban.Shared.Model.AppState.Stage Stage { set; get; }

	[Parameter] 
	public EventCallback AfterSave { get; set; }

	private bool _isLoading = false;

	private async Task HandleValidSubmit()
	{
		_isLoading = true;

		var response = await StateService.EditStageAsync(Stage);
		if (response.HasError)
		{
			//_errorMessage = response.ErrorMessage;
			//_showAlert = true;
		}
		else
		{
			//todo- update appstate
		}
		_isLoading = false;
		await AfterSave.InvokeAsync(null);
	}
}
